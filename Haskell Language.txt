Dependent typing:
express invariants http://axisofeval.blogspot.com/2010/10/notes-on-dependent-types.html

another tutorial. http://learnyouahaskell.com/chapters

Most things you can do with macros, you can also do with monads/arrows/...

Haskell less interactive

Haskell no keywordsor variable length arguments

http://p-cos.net/documents/dynatype.pdf "Pascal Costanza, Dynamic vs. Static Typing — A Pattern-Based Analysis"

"The Swine Before Perl" for a talk demonstrating a macro that cannot be done with laziness. Also, if you do want some bit to be strict, then you can't do that as a function -- mirroring the fact that Scheme's delay cannot be a function

Haskell could automatically decide what to run in parallel

Template Haskell if you really need macros

DSL (domain specific languages) for Lisp

Macros: I give some examples of such macros in Practical Common Lisp (http://www.gigamonkeys.com/book/), in particular Chapter 24 on parsing binary files

Use Haskell for data stream processing (e.g. finance) and high verification
http://www.haskell.org/haskellwiki/

Google experience http://k1024.org/~iusty/papers/icfp10-haskell-reagent.pdf
