Example:
#!/usr/bin/gawk
BEGIN{while(NR<=10)getline;}	# skip header of 10 lines
{print $2,$3}			# print 2nd and 3rd column

gawk '$0!~/^#/ {print $1,$2-$3,sqrt($2+$3)}' ns.dat > ns_diff.dat

 gawk 'program' inputfiles
 gawk -f program.awk inputfiles		# search in $AWKPATH
 gawk 'program' VAR=2 inputfiles	# blank lines as separator
 gawk -F, 'program'			# FS=,
 
 BEGIN {}
 {commands}		# exec for each line	 
 /foo/			# /foo/ {print $0}
 /regex/ {...}
 NR > 10 {...}		# number of current record > 10
 /foo/ && /bar/ {...}
 /beg/, /end/ {...}	# for all records between the two matches
 $1~/foo/ {...}
 $1!~/foo/ {...}
 END {}
 
 function name(args) {...}
 name(1,2)		# no space before (
 
 if ("index" in array) print "yes"; else print "no"
 if ( (1,2) in multiarray) print "yes"; else print "no"
 for(i=1;i<=3;i++) {...}
 while(i<3) {...}
 do {...} while (i<3)
 
 delete array[index]
 array[1,2] == array["1" SUBSEP "2"]
 for(varxy in multiarray) {
 	split(varxy, varx, SUBSEP)
	...
	}
 
 tolower($1)~/pattern/
 IGNORECASE=1
 
 NR			# records read
 FS=' '			# field separator
 RS='\n'		# record separator
 RS=			# RS=blank line and FS=FS and FS=\n
 OFS, ORS 		# print a,b,c -> "a OFS b OFS c ORS"
 
 NUM = 2
 print NUM + 3		# sprintf OFMT, "5"
 
 NF=number of fields
 
 getline		# reads line and sets variables
 getline var		# reads line and sets some variables
 
 getline < file
 getline var < file
 command | getline
 print items > file
 print items>> file
 print items | command
 close(file)		# to reset position and close pipe (e.g. for "sort")
 
 fprint '%c %d %e %f %s', 'a', 2, 3e4, 5.6, 'bcd'
 %g			# =%e or %f which ever shorter
 fprint '%-5d', 12	# '12   '
 fprint '%5d', 12	# '   12'
 fprint '%2f', 1.234	# '1.23'
  
 
 possible:
 $(2*3)
 $2="new"; print $0;
 print 'Error' > /dev/stderr
 a=2^3
 b=str1 str2
 x > 0 ? x : -x
 
 BUILDIN functions
