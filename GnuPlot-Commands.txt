= Start-up =
| export GNUPLOT_LIB="//PATH//" | where to search for gnu-files |
| gnuplot [-noraise] [-persist] [//FILE//.gnu] [//FILE//.gnu] |  |
| gnuplot - //FILE//.gnu << "//COMMANDS//" | execute commands before file.gnu |
| ~/.gnuplot | commands to execute when starting gnuplot |
| ~/.Xdefaults | X11 configuration, e.g. "gnuplot*background: white" |

= Editing =
| ^A | beginning of line |
| ^E | end of line |
| ^D | delete |
| ^U | delete line |

= Terminals =
| set term epslatex | for eps files |
| set term svg | svg graphics |
| set term x11 //N// [title "..."] | plot in plot | 
| set term table | prints point coordinates instead of drawing | 
| set terminal latex |  |
| set term post portrait enhanced | set terminal (e.g. postscript), see ps_symbols.ps, ps_guide.ps and "help postscript" for tips |

= Gnu-Files =
| call "//FILE//" [//PARAMS//] | can call with params $0-$9 |
| save "//FILE//" | store set, functions, variables, last plot command |
| load "//FILE" | (does not load output, Make sure terminal is X11) |

= General commands =
| show | show settings of "set" commands |
| test | test graphics, e.g. display styles |
| history | display history |
| history !//COMMAND// | exec last comm starting with //COMMAND// |
| `//COMMAND//` | as in bash |
| !//COMMAND// | execute |

= Characters =
| ""@{/=56 -} {/=24 h}"" | \hbar |
| ""{/=8 @{/Symbol=24 -}_{/=14 h}}"" | \hbar |
| ""{/=14 @^{/Symbol=10 -}{/=14 h}}"" | \hbar |
| ""{/Times-Italic y} [{/Times-Italic @^{/=11 \137}h}]"" | \hbar |
| ""{/Times-Italic x} [@^{/Symbol \\\260}A]"" | \hbar |
| ""\305"" | \AA |

= Labels, Marks, Key and Border =
| set arrow ...| place arrow |
| set label ...| put label |
| set //NAME// "//TEXT//" at //POS// | put label |
| set border | set borders (or set noborder) |
| set format x '%g m' | change labeling |
| set colorbox | colorbox for gradient |
| set key below | legend, position and style |
| set label "\shortstack{line1\\line2}" at 0,0 |  |
| set label "{centred}" at 0,0 |  |
| set label "[t]{topaligned}" at 0,0 |  |

= Axis, Grid and Tics =
| set grid xtics | draw grid lines |
| set mxtics | use minor tics |
| set tics | can be made outwards |
| set ticscale |
| set ticslevel |
| set xtics axis //INCREMENT// | configure xtics |
| set zeroaxis | draw zeroaxis |
| set timestamp ...| use timestamp on plot |
| set timefmt ...| set time format |
| set logscale x | use logscale for the x axis |

= Settings =
| bind | redefine key for interactive window |
| set angles degrees | use degrees |
| set encoding iso_8859_15 | access special \//###// |

= Plotting Date =
To plot a "data" file "like 03/21/95 10:00  6.02e23":
| set xdata time |  |
| set timefmt "%m/%d/%y" |  |
| set xrange ["03/21/95":"03/22/95"] |  |
| set format x "%m/%d" |  |
| set timefmt "%m/%d/%y %H:%M" |  |
| plot "data" using 1:3 |  |

= Plotting =
== Data ==
| load "<perl -ne '...' <//DATAFILE//" | data preprocessing |
| single blank line | discontinuity -> no line connection in graph |
| double blank line | new index |

== Multiplotting ==
| set multiplot | use same windows for plots (set size, set origin for positioning) |
| set origin x,y | set origin for new graph |
| set size | change size |

== Settings ==
| set style filledcurves | fill curve area |
| set title "//TITLE//"| create overall title |
| set dummy //VAR// | set //VAR// as the new variable in functions |
| set samples x[,y3d] | set number of samples |
| set parametric | in 2D t is the variable and u,v in 3D |

== Scaling ==
| set autoscale | use autoscaling; fixmin for disabling extension to tics |
| set yrange [] writeback | (with autoscale) stores autoscale range |
| set yrange restore | restores save |
| set clip | clip data at boundaries of graph |
| set xrange [-10:10] | change xrange (* mean auto scale, blank means keep value) |
| set offset l,r,t,b | use extra space in autoscaled graphs |
| set size -1 | x-axis and y-axis match scale (not in X11 though) |

== XY Plot command ==
| plot "-" | read from STDIN, 'e' at beginning of line terminates entry |
| plot "" | same file as before |
| replot //EXTRAARGS// |  |

plot [x=-10:10] [-1:1] sin(x)
| title '...' | use notitle for no title at all |
| with style | See set style (e.g. points, dots, lines) |

| plot 'datafile' | plot datafile ('-' is inline input) |
| index //RECORD// | dataset |
| every 2 | points in dataset |
| using 2:3 | columns (0:Counter#,-1:Dataline#,-2:index, "<format>":scanf; "::"4="1:2:4";) |
| smooth csplines | connect points |
| smooth unique | average double x entries |
| smooth frequency | sum double x entries |
| with boxes | discrete boxes |
| with vectors | x,y -> x+dx,y+dy |
(scanf possible, set style for errorbars)

== XYZ SURFACE PLOTS ==
=== Configuration ===
| set cntrparam bspline | smooth, but wrong values |
| set cntrparam cubicspline | real values kept |
| set contour surface | draw contours for splot |
| set view map | change 3D View
| set isosamples | change isoline density |
| set mapping cylindrical |  |
| set pm3d | setup pm3d; e.g. change averaging of corners |

=== SPlot command ===
| splot | Surface 3D plot |
| splot 'data' | 1 column -> (line,index,data), 3 columns -> (datax,datay,dataz), 2 or 4 columns: last one is colour |
| splot 'data' matrix | read file in matrix format with |
| splot 'data' binary | read file in matrix format with annotated axis |

= Fitting =
fit takes sigma for weighting if 3rd column given
"var = value # FIXED " in paramfile means it's kept fixed for fit
Parameters should be similar in magnitude
Multibranch fitting: see Doc.
| update 'file' | saves parameters back in file |

Interaction:
a | autoscale 
b | border
g | grid
r | ruler (distance)
n p | change zoom
u | unzoom
5 | polar distance
Esc | cancel zoom

"if ()" can be used with "reread" to loop

*** Files ***
load "<perl -ne '...' <datafile"
load "-"

set output 'file'		# Output to file
set output '|lp'		# pipe

set print 'file'		# destination for "print" command
set print '-'
set print '|lp'

*** Functions ***
f(a,b)=a+b			# function definition: 
column(x)			# column x of datafile

*** Complex numbers ***
Complex numbers: {Real,Imaginary}
Most functions take complex arguments
imag(), real()
gnuplot plots real(Z) if imag(Z)<zero (see "help set zero")

*** Filled curve through parametric plot ***
set parametric
f(x)=cos(x)
g(x)=sin(x)
xmax=pi/4
set xrange [0:xmax]
set trange [0:2*xmax]
path(t) = ( t<= xmax ? f(t) : g(2*xmax-t) )
fold(t) = (t <=xmax ? t : 2*xmax - t)
plot fold(t),path(t) with filledcurves closed

*** Implicit graphs through contours ***
set contour base
set cntrparam levels discrete 0.0
set nosurface
set term table
set out 'curve.dat'
splot f(x,y)
set out
set term pop
plot 'curve.dat' w l

set mapping cylindrical	# How to interpret 3D data files
set missing		# Sets the "Missing" data character in files
set style [data|function|arrow|...]	# Set default styles

= Useful help =
| help coordinates | positions |
| help functions | different functions |
| help commands | system commands |
| help plot datafile special |  |
