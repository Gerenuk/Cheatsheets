set datafile separator "\t"


export GNUPLOT_LIB="..."	# where to search
~/.gnuplot

show		# Shows settings of set commands
test		# test graphics (display styles)

bind		# redefine key for interactive window

load "<perl -ne '...' <datafile"
gnuplot - file.gnu << "a=1"

set style filledcurves	# fill curve area

Interaction:
a | autoscale 
b | border
g | grid
r | ruler (distance)
n p | change zoom
u | unzoom
5 | polar distance
Esc | cancel zoom


fit takes sigma for weighting if 3rd column given
"var = value # FIXED " in paramfile means it's kept fixed for fit
Parameters should be similar in magnitude
update 'file'		# saves parameters back in file

Multibranch fitting: see Doc.

"if ()" can be used with "reread" to loop

set angles degrees

set encoding iso_8859_15	# access special \###

*** Terminals ***
set term epslatex	# for eps files
set term svg		# svg graphics
set term x11 <n> [title "..."]	# plot in plot#
set term table		# prints point coordinates instead of drawing

set terminal latex
set label "\shortstack{line1\\line2}" at 0,0
set label "{centred}" at 0,0
set label "[t]{topaligned}" at 0,0

*** Files ***
call "<file>" [<params>]	# can call with params $0-$9
save 'file'		# Store set, functions, variables, last plot command
load 'file'		# (Does not load output, Make sure terminal is X11)
load "<perl -ne '...' <datafile"
load "-"

set output 'file'		# Output to file
set output '|lp'		# pipe
set term post portrait enhanced # Set terminal (e.g. postscript), see ps_symbols.ps, ps_guide.ps and "help postscript" for tips

set print 'file'		# destination for "print" command
set print '-'
set print '|lp'

*** Functions ***
f(a,b)=a+b			# function definition: 
column(x)			# column x of datafile

*** Complex numbers ***
Complex numbers: {Real,Imaginary}
Most functions take complex arguments
imag(), real()
gnuplot plots real(Z) if imag(Z)<zero (see "help set zero")

*** External configuration ***
gnuplot [-noraise] [-persist] [files.gnu]

~/.gnuplot			# in current or home directory as initialisation
export GNUPLOT_LIB=<path to gnu files>

~/.Xdefaults
gnuplot*background: white

`<command>`		# as in bash
!<command>		# execute
gnuplot - file.gnu << "a=1"

*** hbar ***
@{/=56 -} {/=24 h}
{/=8 @{/Symbol=24 -} _{/=14 h}}
{/=14 @^{/Symbol=10 -}{/=14 h}}
{/Times-Italic y} [{/Times-Italic @^{/=11 \137}h}]

*** angstrom ***
{/Times-Italic x} [@^{/Symbol \ \ \ 260}A]
\305

*** Command line editing ***
^A	# beginning of line
^E	# end of line
^D	# delete
^U	# delete line

history				# Display history
history !<command>		# Exec last comm starting with <command>

*** Filled curve through parametric plot ***
set parametric
f(x)=cos(x)
g(x)=sin(x)
xmax=pi/4
set xrange [0:xmax]
set trange [0:2*xmax]
path(t) = ( t<= xmax ? f(t) : g(2*xmax-t) )
fold(t) = (t <=xmax ? t : 2*xmax - t)
plot fold(t),path(t) with filledcurves closed

*** Implicit graphs through contours ***
gnuplot> set contour base
gnuplot> set cntrparam levels discrete 0.0
gnuplot> set nosurface
gnuplot> set term table
gnuplot> set out 'curve.dat'
gnuplot> splot f(x,y)
gnuplot> set out
gnuplot> set term pop
gnuplot> plot 'curve.dat' w l

*** Plotting Date ***
To plot a "data" file "like 03/21/95 10:00  6.02e23":
set xdata time
set timefmt "%m/%d/%y"
set xrange ["03/21/95":"03/22/95"]
set format x "%m/%d"
set timefmt "%m/%d/%y %H:%M"
plot "data" using 1:3

*** DATA FILES ***
single blank line : discontinuity -> no line
double blank line : new index

set mapping cylindrical	# How to interpret 3D data files
set missing		# Sets the "Missing" data character in files
set style [data|function|arrow|...]	# Set default styles

*** tics ***
set mxtics		# Use minor tics
set tics		# can be made outwards
set ticscale
set ticslevel
set xtics axis INCR		# Configure xtics

*** axis/labels/arrows ***
set arrow		# Place arrow
set label		# put label
set NAME "TEXT" at POS	# Put label
set timestamp		# Use timestamp on plot
set timefmt		# Set time format
set title		# create overall title

set border		# Set borders (or set noborder)
set zeroaxis		# Draw zeroaxis
set format x '%g m'		# Change Labeling
set grid xtics	# Draw grid lines
set logscale x		# Use logscale for the x axis

set colorbox		# colorbox for gradient
set key	below		# legend, position and style

set arrow		# place arrow


*** scaling ***
set autoscale		# Use autoscaling; fixmin for disabling extension to tics
set yrange [] writeback	# (with autoscale) stores autoscale range
set yrange restore	# restores save

set clip		# clip data at boundaries of graph
set xrange [-10:10]	# Change xrange (* mean auto scale, blank means keep value)
set offset l,r,t,b	# Use extra space in autoscaled graphs

*** PLOTING FUNCTIONS ***
set dummy VAR		# Set VAR as the new variable in functions
set samples x[,y3d]	# Set number of samples
set parametric		# In 2D t is the variable and u,v in 3D

set size -1		# x-axis and y-axis match scale (not in X11 though)

plot [x=-10:10] [-1:1] sin(x)
	title 'Name'	# Use notitle for no title at all
	with style	# See set style (e.g. points, dots, lines)
plot 'datafile'		# Plot datafile ('-' is inline input)
	index RECORD	# Dataset
	every 2	# Points in dataset
	using 2:3	# columns (0:Counter#,-1:Dataline#,-2:index, "<format>":scanf; "::"4="1:2:4";)
	smooth csplines	# Connect points
	smooth unique	# average double x entries
	smooth frequency	# sum double x entries
	with boxes	# discrete boxes
	with vectors	# x,y -> x+dx,y+dy
	(scanf possible, set style for errorbars)
		
plot "-"		# read from STDIN, 'e' at beginning of line terminates entry
plot ""		# same file as before
p ''; p '' u 1:2; p '' u ($1):($2) are different
plot sin(a*x),a=1,cos(b*x),b=2

replot <Extraarguments>

set parametric
plot sin(t),cos(t)

*** MULTIPLOTS ***
set multiplot		# Use same windows for plots (set size, set origin for positioning)
set origin x,y		# Set origin for new graph
set size		# Change size

*** SURFACE PLOTS ***
set cntrparam bspline	# smooth, but wrong values
set cntrparam cubicspline	# real values kept
set contour surface	# Draw contours for splot
set view map		# Change 3D View
set isosamples		# Change isoline density
set mapping cylindrical

set pm3d		# setup pm3d; e.g. change averaging of corners

splot		# Surface 3D plot
splot 'data'		# 1 column -> (line,index,data)
		# 3 columns -> (datax,datay,dataz)
		# 2 or 4 columns: last one is colour
splot 'data' matrix		# read file in matrix format with
splot 'data' binary		# read file in matrix format with annotated axis

*** Useful help ***
help coordinates : positions
help functions : different functions
help commands : system commands
help plot datafile special
